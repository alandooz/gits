#!/bin/bash

echo
echo "#####  Welcome to Gits v0.3  #####"
echo "A massive GitHub Cloner and Git Updater helper."
echo "_by AlanDooz_"

echo
if [ $1 ]; then
    if [ "${1: -1}" = "/" ];
        then
            target=$1
        else
            target="${1}/"
    fi
    if [ -d "$target" ];
        then
            echo "Working on $target"
            cd "${target}"
        else
            echo "The directory $target doesn't exists."
            exit 1
    fi
    else
    echo "Working on current directory..."
fi

echo
echo 'Do you want to Clone all your Github repos, pull all your local Git repos or push all your local Git repos?'
PS3=$'\n''Please enter your choice: '
options=("Clone Github Repos" "Pull local Git repos" "Push local Git repos")
echo
select opt in "${options[@]}"
do
    case $opt in
        "Clone Github Repos")
            break
            ;;
        "Pull local Git repos")
            for i in */.git; do ( echo; echo "${i%????}"; cd $i/..; git pull; ); done
            echo
            echo "Thanks for using Gits! :)"
            echo
            exit 0
            ;;
        "Push local Git repos")
            for i in */.git; do ( echo; echo "${i%????}"; cd $i/..; git add -A; git commit -m "Pushed working commit with Gits"; git pull; git push; ); done
            echo
            echo "Thanks for using Gits! :)"
            echo
            exit 0
            ;;
        *) echo "Invalid option";;
    esac
done

echo
echo 'This account is a user or a organization?'
PS3=$'\n''Please enter your choice: '
options=("User" "Organization")
echo
select opt in "${options[@]}"
do
    case $opt in
        "User")
            type=users
            break
            ;;
        "Organization")
            type=orgs
            break
            ;;
        *) echo "Invalid option";;
    esac
done

echo
while [ -z "$username" ]
do
    read -p 'Username: ' username
done

echo
if [ "$type" == "users" ]; then
    echo 'Do you want to clone private repos too?'
    PS3=$'\n''Please enter your choice: '
    options=("Yes" "No")
    echo
    select opt in "${options[@]}"
    do
        case $opt in
            "Yes")
                echo
                while [ -z "$GITHUB_API_TOKEN" ]
                do
                    read -sp 'Github API Token: ' GITHUB_API_TOKEN
                done

                privaterepos=$(curl -s -H "Authorization: token $GITHUB_API_TOKEN" "https://api.github.com/user/repos?&affiliation=owner&visibility=private" | grep -w clone_url | grep -o '[^"]\+://.\+.git')

                privatepage=1
                countprivaterepos=$(echo "${privaterepos}" | wc -l)
                maxpageprivaterepos=$(( ${countprivaterepos} / (N+1)/100 + 1 ))

                while [ $privatepage -le $maxpageprivaterepos ]
                do
                    echo
                    echo "$privaterepos" | xargs -L1 git clone
                    ((privatepage++))
                done
                break
                ;;
            "No")
                break
                ;;
            *) echo "Invalid option";;
        esac
    done
fi

publicrepos=$(curl -s "https://api.github.com/$type/$username/repos?page=$page&per_page=100" | grep -w clone_url | grep -o '[^"]\+://.\+.git')

publicpage=1
countpublicrepos=$(echo "${publicrepos}" | wc -l)
maxpagepublicrepos=$(( ${countpublicrepos} / (N+1)/100 + 1 ))

while [ $publicpage -le $maxpagepublicrepos ]
do
    echo
    echo "$publicrepos" | xargs -L1 git clone
    ((publicpage++))
done

echo
echo "Thanks for using Gits! :)"
echo
exit 0